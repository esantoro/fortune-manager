#! /usr/bin/env perl

use strict ;

our $VERSION = '0.01';

use feature 'say' ;
use File::Temp ;

our $RCFILE="$ENV{HOME}/.fortune-manager" ;

## get the fortune name or exit showing some help
my $fortune = shift @ARGV ;

unless ($fortune) {
    say "usage: $0 [fortune-file-name]" ; 
    exit 2 ;
}


## load settings from ~/.fortune-manager

#my $home = `echo \$HOME` ;
#chdir $home ;

unless (open SETTINGS, "< $RCFILE") {
    say STDERR "could not read settings file\nReason: $!" ;
    exit 2;
}

my @lines = <SETTINGS> ;

my %database = ();

foreach my $line (@lines) {
    chomp $line ;
    
    ## ignore comment lines
    next if $line =~ /^\s?#/ ;

    ## ignore blank lines 
    next if $line =~ /^\s*$/ ;

    my @contents = split /\s/, $line ;
    my $fullpath = shift @contents ;
    my @aliases = @contents ;

    unless (@aliases) {
	say STDERR "Warning: $RCFILE contains a fortune file withoutany alias" ;
	next ; 
    }

    foreach my $alias (@aliases) {
	$database{$alias} = $fullpath ;
    }
}



#now check if there's a fortune with the name specified by the command line:
unless (exists $database{$fortune} ) {
    say STDERR "There's no fortune file aliased as $fortune in the config file, sorry," ;
    exit 2 ;
}

## read the new fortune to a temporary file
my $tmpfh = File::Temp->new(SUFFIX=>".tmp") ;
system join " ", ($ENV{EDITOR},$tmpfh->filename) ;

my $fortune_text = do {local $/; <$tmpfh>} ;

open STRFILE, ">> $database{$fortune}" or die $! ;

## skip blank fortunes..
unless $frotune_text say STDERR "blank fortune, not adding..." ;
exit 0 unless $fortune_text ;

say STRFILE "\n%\n" ;
print STRFILE $fortune_text ;
